{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResourse","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoading","setState","onError","onCharLoaded","updateChar","Math","floor","random","then","catch","onTryItUpdate","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","clazz","CharList","characters","newItemLoading","charEnded","getCharacters","onRequest","onCharactersLoading","onCharactersLoaded","newCharacters","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","renderCharListItem","charactersList","index","tabIndex","props","onCharSelected","onKeyPress","e","key","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20308eeb.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"google.com\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"google.com\">Characters</a></li>\n                    /\n                    <li><a href=\"google.com\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <div>Something went wrong...</div>\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"Something went wrong..\" />\r\n        <img \r\n            style={{ \r\n                display: 'block',\r\n                width: '250px',\r\n                height: '250px',\r\n                objectFit: 'contain',\r\n                margin: '0 auto'}}\r\n            src={img}\r\n            alt='Error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=51d4cea7deb30667b56a16ede28bc0d3';\r\n    _baseOffset = 210;\r\n\r\n    getResourse = async (url) => {\r\n\r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        // console.log(char)\r\n        return {\r\n            name: char.name,\r\n            // description: char.description,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'Unfortunately, there is no description for this character :(',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar  extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     // console.log('constructor')\n        \n    // }\n\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount () {\n        // console.log('did mount')\n        this.updateChar();\n    }\n\n    componentWillUnmount () {\n        // console.log('will Unmount')\n    }\n\n    onCharLoading = () => {\n        this.setState({ \n            loading: true\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    onCharLoaded = (char) => {\n        // console.log('update')\n        this.setState({\n            char: char, \n            loading: false\n        });\n    }\n\n\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    } \n\n    onTryItUpdate = () => {\n        this.updateChar();\n    }\n\n    render () {\n        let {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null\n\n        // if (!description) {\n        //     description = 'Unfortunately, there is no description for this character :('\n        // }\n\n        // if(loading) {\n        //     return <Spinner/>\n        // }\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.onTryItUpdate} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let clazz = 'cover'\n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {   \n        clazz = 'contain'\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img style={{ objectFit: `${clazz}`}}\n                src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    ) \n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\n// import abyss from '../../resources/img/abyss.jpg';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\n\nclass CharList extends Component {\n    // constructor (props) {\n    //     super(props)\n    //     // console.log(props)\n    // }\n\n    state = {\n        characters: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n\n    getCharacters = () => {\n        // this.marvelService\n        //     .getAllCharacters(res => console.log(res))\n        //     .then(this.onCharactersLoaded)\n        //     .catch(this.onError)\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharactersLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharactersLoaded)\n            .catch(this.onError)\n\n    }\n\n    onCharactersLoading = () => {\n        this.setState({\n            newItemLoading: true\n        });\n    }\n\n    onCharactersLoaded = (newCharacters) => {\n        let ended = false;\n        if (newCharacters.length < 9) {\n            ended = true;\n        }\n        // console.log(characters)\n        this.setState(({offset, characters}) => ({\n            characters: [...characters, ...newCharacters], \n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }));\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    componentDidMount () {\n        // console.log('did mount')\n        this.getCharacters();\n    }\n\n    componentWillUnmount () {\n        // console.log('will Unmount')\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderCharListItem = (characters) => {\n        // console.log(props)\n    \n        let clazz = 'cover'\n        const charactersList = characters.map((item, index) => {\n            // console.log(item)\n            const {name, thumbnail} = item;\n            if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {   \n                clazz = 'contain';\n            }\n            return (\n                <li \n\n                    tabIndex={0}\n                    ref={this.setRef}\n                    className=\"char__item\" \n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(index);\n                        }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(index);\n                        }\n                    }}>\n                    <img style={{ objectFit: `${clazz}`}}\n                        src={thumbnail} alt=\"Character img\"/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n    \n        return (\n            <ul className=\"char__grid\">\n                {charactersList}\n            </ul>   \n        )\n    \n    }\n\n    render () {\n        // console.log(this.props);\n        \n        const  {characters, loading, error, newItemLoading, offset, charEnded } = this.state;\n        const items = this.renderCharListItem(characters);\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        // const content = !(loading || error) ? <CharListItem characters={characters} props={this.props}/> : null\n        const content = !(loading || error) ? items : null\n\n        // console.log(characters)\n        return (\n            <div className=\"char__list\">\n                { errorMessage }\n                { spinner }\n                { content }\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n\n}\n\n// const CharListItem = ({characters, props}) => {\n//     // console.log(props)\n\n//     let clazz = 'cover'\n//     const charactersList = characters.map((item) => {\n//         // console.log(item)\n//         const {name, thumbnail} = item;\n//         if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {   \n//             clazz = 'contain';\n//         }\n//         return (\n//             <li className=\"char__item\" key={item.id}\n//                 onClick={() => props.onCharSelected(item.id)}>\n//                 <img style={{ objectFit: `${clazz}`}}\n//                     src={thumbnail} alt=\"Character img\"/>\n//                 <div className=\"char__name\">{name}</div>\n//             </li>\n//         )\n//     })\n\n//     return (\n//         <ul className=\"char__grid\">\n//             {charactersList}\n//         </ul>   \n//     )\n\n// }\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\n// const CharList = () => {\n//     return (\n//         <div className=\"char__list\">\n//             <ul className=\"char__grid\">\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item char__item_selected\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//                 <li className=\"char__item\">\n//                     <img src={abyss} alt=\"abyss\"/>\n//                     <div className=\"char__name\">Abyss</div>\n//                 </li>\n//             </ul>\n//             <button className=\"button button__main button__long\">\n//                 <div className=\"inner\">load more</div>\n//             </button>\n//         </div>\n//     )\n// }\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\n\nimport './charInfo.scss';\n// import thor from '../../resources/img/thor.jpeg';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    // componentDidCatch(err, info) {\n    //     console.log(err, info)\n    //     this.setState({error: true});\n    // }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n\n    }\n\n    onCharLoading = () => {\n        this.setState({ \n            loading: true\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    onCharLoaded = (char) => {\n        // console.log('update')\n        this.setState({\n            char: char, \n            loading: false\n        });\n    }\n\n    render () {\n\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null\n\n        return (\n            <div className=\"char__info\">\n               {skeleton}\n               {errorMessage}\n               {spinner}\n               {content}\n            </div>\n        )\n    }\n    \n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let clazz = 'cover'\n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {   \n        clazz = 'contain'\n    }\n    // if(comics.length === 0) {\n    //     console.log('no comics')\n    // }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={{ objectFit: `${clazz}`}}\n                    src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There are no comics'}\n                {\n                    \n                    comics.map((item, index) => {\n                        // console.log(index)\n                        // eslint-disable-next-line\n                        if( index > 9) return;\n                        return (\n                            <li key={index} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }            \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch (error, errorInfo) {\r\n        console.log(error, errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    // state = {\n    //     showRandomChar: true\n    // }\n\n    // toggleRandomChar = () => {\n    //     this.setState((state) => {\n    //         return {\n    //             showRandomChar: !state.showRandomChar\n    //         }\n    //     })\n    // }\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    {/* {this.state.showRandomChar ? <RandomChar/> : null} */}\n                    {/* <button onClick={this.toggleRandomChar}>CLICK</button> */}\n                    <ErrorBoundary>\n                        <RandomChar/> \n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\n// const App = () => {\n//     return (\n//         <div className=\"app\">\n//             <AppHeader/>\n//             <main>\n//                 <RandomChar/>\n//                 <div className=\"char__content\">\n//                     <CharList/>\n//                     <CharInfo/>\n//                 </div>\n//                 <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n//             </main>\n//         </div>\n//     )\n// }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}